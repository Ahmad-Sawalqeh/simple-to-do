{"version":3,"sources":["reducer/reducer.js","actions/actionTypes.js","store/store.js","components/tasksStatistics/index.js","actions/actionCreater.js","components/control/topControl/index.js","components/taskForm/index.js","components/editForm/index.js","components/list/index.js","components/control/bottomControl/index.js","components/tasksBoard/index.js","app.js","index.js"],"names":["initialList","initialState","userInput","list","tasks","wantedListToShow","status","edit","itemId","counter","deleted","edited","NotStarted","InProgress","canceled","completed","reducer","state","action","type","payload","myStore","createStore","TasksStatistics","useSelector","className","length","setUserInput","input","setList","setCounter","statistic","setEdit","editedItem","setWantedListToShow","TopControl","dispatch","useDispatch","itemsToShow","choise","filter","item","currentStatus","onClick","TaskForm","onSubmit","e","preventDefault","newList","newItem","id","randomId","value","number","isEditing","push","onChange","target","placeholder","EditForm","props","borderColor","listCopy","doneEditedItem","updateList","map","val","List","Boolean","idx","key","currentItemState","previousItemState","preNumber","split","join","taskStatus","oldListCopy","some","editingItem","find","editItem","newlist","itemStatus","deleteItem","BottomControl","oneItem","TasksBoard","App","Root","store","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a74acf9.chunk.js","sourcesContent":["import {\n    SET_USER_INPUT,\n    SET_LIST,\n    SET_EDIT,\n    SET_WANTED_LIST_TO_SHOW,\n    SET_COUNTER\n  } from \"../actions/actionTypes.js\";\n\n  const initialList = {\n    \"tasks\": [\n         {\n            \"id\": 8688789987070970897,\n            \"value\": \"create sitemap sketch, wireframe and mock-up.\",\n            \"currentStatus\": {\n                \"number\": 3,\n                \"state\" : \"completed\"\n            },\n            \"isEditing\": false,\n        },\n        {\n            \"id\": 86887899875454545457,\n            \"value\": \"select technoogies stack (programming languages, frameworks and CMS).\",\n            \"currentStatus\": {\n                \"number\": 3,\n                \"state\" : \"completed\"\n            },\n            \"isEditing\": false,\n        },\n        {\n            \"id\": 65765686575454545457,\n            \"value\": \"create colorfull page layouts and gets client's feedback also change the layout if required, test and upload the website to server.\",\n            \"currentStatus\": {\n                \"number\": 1,\n                \"state\" : \"In-Progress\"\n            },\n            \"isEditing\": false,\n        },\n        {\n            \"id\": 657656478788487645457,\n            \"value\": \"take 1 hour break before starting of building the initial website interface.\",\n            \"currentStatus\": {\n                \"number\": 2,\n                \"state\" : \"canceled\"\n            },\n            \"isEditing\": false,\n        },\n        {\n            \"id\": 657656478788445435457,\n            \"value\": \"build website by adding special features and interactivity.\",\n            \"currentStatus\": {\n                \"number\": 0,\n                \"state\" : \"Not-Started\"\n            },\n            \"isEditing\": false,\n        },\n        {\n            \"id\": 6576589789988445435457,\n            \"value\": \"get content ready with the power of SEO.\",\n            \"currentStatus\": {\n                \"number\": 1,\n                \"state\" : \"In-Progress\"\n            },\n            \"isEditing\": false,\n        },\n        {\n            \"id\": 6578889789988445435457,\n            \"value\": \"fix bugs ASAP and keep it up to date.\",\n            \"currentStatus\": {\n                \"number\": 0,\n                \"state\" : \"Not-Started\"\n            },\n            \"isEditing\": false,\n        }\n    ]\n}\n\nconst initialState = {\n    userInput: '',\n    list: initialList.tasks,\n    wantedListToShow: initialList.tasks,\n    status: ['Not-Started', 'In-Progress', 'canceled', 'completed'],\n    edit : {\n        userInput: '',\n        itemId: 0,\n    },\n    counter: { \n        deleted: 2,\n        edited: 4,\n        NotStarted: 2,\n        InProgress: 2,\n        canceled: 1,\n        completed: 2,\n    }\n}\n\nconst reducer = (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type){\n        case SET_USER_INPUT:\n            return { ...state, userInput: payload };\n        case SET_LIST:\n            return { ...state, list: payload };\n        case SET_EDIT:\n            return { ...state, edit: payload };\n        case SET_WANTED_LIST_TO_SHOW:\n            return { ...state, wantedListToShow: payload };\n        case SET_COUNTER:\n            return { ...state, counter: payload };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","export const SET_USER_INPUT = `setUserInput`;\n\nexport const SET_LIST = `setList`;\n\nexport const SET_EDIT = `setEdit`;\n\nexport const SET_WANTED_LIST_TO_SHOW = `setWantedListToShow`;\n\nexport const SET_COUNTER = `setCounter`;\n","import { createStore } from \"redux\";\nimport reducer from \"../reducer/reducer.js\";\n\nconst myStore = createStore(reducer);\n\nexport default myStore;\n","import React from 'react';\nimport { useSelector } from \"react-redux\";\nimport './tasksStatistics.css';\n\n\nconst TasksStatistics = () => {\n\n    const { list, counter: { deleted, edited, NotStarted, InProgress, canceled, completed } } = useSelector(state => state);\n\n    return (\n        <div className='bg'>\n            <h2 className='font-weight-bold text-left my-5'>Tasks statistics</h2>\n            <div>\n                <h5 className='font-weight-bold text-left my-3'>General :</h5>\n                <p>Number of Tasks : {list.length}</p>\n                <p>Deleted Tasks : {deleted}</p>\n                <p>Edited Tasks : {edited}</p>\n            </div>\n            <hr className='bg-light my-3' />\n            <div>\n                <h5 className='font-weight-bold text-left my-3'>Tasks Status :</h5>\n                <div className='mb-2'>\n                    <span className='statisticSpan not-started-span'></span><span>Not Started : {NotStarted}</span><br/>\n                </div>\n                <div className='mb-2'>\n                    <span className='statisticSpan in-progress-span'></span><span>In Progress : {InProgress}</span><br/>\n                </div>\n                <div className='mb-2'>\n                    <span className='statisticSpan canceled-span'></span><span>Canceled : {canceled}</span><br/>\n                </div>\n                <div className='mb-2'>\n                    <span className='statisticSpan completed-span'></span><span>Completed : {completed}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TasksStatistics;\n","import {\n    SET_USER_INPUT,\n    SET_LIST,\n    SET_EDIT,\n    SET_WANTED_LIST_TO_SHOW,\n    SET_COUNTER\n  } from \"./actionTypes.js\";\n\nexport const setUserInput = input => {\n  return {\n    type: SET_USER_INPUT,\n    payload: input\n  };\n};\n\nexport const setList = list => {\n  return {\n    type: SET_LIST,\n    payload: list\n  };\n};\n\nexport const setCounter = statistic => {\n  return {\n    type: SET_COUNTER,\n    payload: statistic\n  };\n};\n\nexport const setEdit = editedItem => {\n  return {\n    type: SET_EDIT,\n    payload: editedItem\n\n  };\n};\n\nexport const setWantedListToShow = list => {\n  return {\n    type: SET_WANTED_LIST_TO_SHOW,\n    payload: list\n  };\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  setWantedListToShow, \n} from \"./../../../actions/actionCreater.js\";\n\nimport './topControl.css'\n\nconst TopControl = () => {\n\n    const { list } = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    function itemsToShow(choise){\n        if(choise === 'all'){\n          dispatch(setWantedListToShow(list));\n        }else{\n          dispatch(setWantedListToShow(list.filter(item => choise === item.currentStatus.state)));\n        }\n    }\n\n    return (\n        <>\n          <button className='btn btn-light mx-1' onClick={() => itemsToShow('all')}>list</button>\n          <button className='btn btn-light mx-1' onClick={() => itemsToShow('Not-Started')}>Not-Started</button>\n          <button className='btn btn-light mx-1' onClick={() => itemsToShow('In-Progress')}>In-Progress</button>\n          <button className='btn btn-light mx-1' onClick={() => itemsToShow('canceled')}>Canceled</button>\n          <button className='btn btn-light mx-1' onClick={() => itemsToShow('completed')}>Completed</button>\n        </>\n    );\n}\n\nexport default TopControl;\n","import React from 'react';\nimport { v4 as randomId } from 'uuid';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { \n  setUserInput, \n  setList, \n  setWantedListToShow, \n  setCounter\n} from \"./../../actions/actionCreater.js\";\n\nimport './taskForm.css'\n\nconst TaskForm = () => {\n\n    const { userInput, list, counter } = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    function changeUserInput(e){\n      let input = e.target.value;\n      dispatch(setUserInput(input));\n    }\n\n    function addItem(e){\n      e.preventDefault();\n      if(userInput === '') return;\n      let statistic, newList = [...list];\n      const newItem = {\n        id: randomId(),\n        value: userInput,\n        currentStatus: {\n          number: 0,\n          state : 'Not-Started'\n        },\n        isEditing: false\n      }\n      newList.push(newItem);\n      statistic = {...counter, NotStarted: counter.NotStarted + 1 }\n      dispatch(setCounter(statistic))\n      dispatch(setList(newList));\n      dispatch(setWantedListToShow(newList));\n      dispatch(setUserInput(''));\n    }\n\n    return (\n      <div className='container card-body'>\n        <form onSubmit={addItem} className=\"d-flex justify-content-between\">\n          <div className='input-group'>\n            <div className='input-group-prepend'>\n              <div className='input-group-text color text-white'>\n                <i className=\"fas fa-book\"></i>\n              </div>\n            </div>\n            <input className='form-control' onChange={changeUserInput} value={userInput} type='text' placeholder='+ Add New Task here ...' />\n          </div>\n        </form>\n      </div>\n    );\n}\n\nexport default TaskForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { \n  setList, \n  setWantedListToShow, \n  setEdit,\n  setCounter\n} from \"./../../actions/actionCreater.js\";\n\nimport './editForm.css'\n\nconst EditForm = (props) => {\n    const { id, borderColor } = props;\n    const { list, edit, counter } = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    function changeEditedUserInput(e){\n      let editedItem = {\n        userInput: e.target.value,\n        itemId: id,\n      }\n      dispatch(setEdit(editedItem));\n    }\n\n    function editItem(e){\n        e.preventDefault()\n\n        const listCopy = [...list];\n        let editedItem, doneEditedItem = edit.userInput;\n        let updateList = listCopy.map(val => {\n          if(val.id === id) {\n            editedItem = val.value\n            val.isEditing = !val.isEditing\n            val.value = edit.userInput\n          }\n          return val;\n        });\n        let resetEditedItem = {\n            userInput: '',\n            itemId: 0,\n        }\n        if(editedItem !== doneEditedItem){\n          let statistic = {...counter, edited: counter.edited + 1}\n          dispatch(setCounter(statistic))\n        }\n        dispatch(setList(updateList));        \n        dispatch(setWantedListToShow(updateList));\n        dispatch(setEdit(resetEditedItem));\n    }\n\n    return (\n      <div className='container'>\n        <form onSubmit={editItem} className=\"d-flex justify-content-between\">\n          <div className='input-group'>\n            <div className='input-group-prepend'>\n              <span className=\"my-auto mx-1 font-weight-bold text-center\">Editing Task</span>\n              <div className={`input-group-text iconColor${borderColor} text-white`}>\n                <i className=\"far fa-edit editColor\"></i>\n              </div>\n            </div>\n            <input className={`form-control edit ${borderColor}`} onChange={changeEditedUserInput} value={edit.userInput} type='text' placeholder='Edit Task here ...' />\n          </div>\n        </form>\n      </div>\n    );\n}\n\nexport default EditForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport EditForm from './../editForm'\nimport './list.css';\n\nimport {\n  setList, \n  setEdit,\n  setWantedListToShow, \n  setCounter\n} from \"./../../actions/actionCreater.js\";\n\nconst List = () => {\n\n    const { list, wantedListToShow, status, counter } = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    function deleteItem(id){\n        const newlist = [...list];\n        const updateList = newlist.filter(val => val.id !== id);\n        let deletedItem = newlist.filter(val => val.id === id);\n        let itemStatus = deletedItem[0].currentStatus.state.split('-').join('')\n        let statistic = {...counter, deleted: counter.deleted + 1, [itemStatus]: counter[itemStatus] - 1}\n        dispatch(setCounter(statistic))\n        dispatch(setList(updateList));\n        dispatch(setWantedListToShow(updateList));\n    }\n    \n    function editItem(id){\n        let oldListCopy, listCopy = [...list];\n        let alreadyThereIsEditedItem = listCopy.some(val => val.isEditing);\n        if(alreadyThereIsEditedItem){\n            oldListCopy = listCopy.map(val => {\n                if(val.isEditing) val.isEditing = !val.isEditing\n                return val;\n            });\n            let resetEditedItem = {\n                userInput: '',\n                itemId: 0,\n            }\n            dispatch(setList(oldListCopy));\n            dispatch(setEdit(resetEditedItem));\n            listCopy = oldListCopy;\n        }\n        const editingItem = listCopy.find(val => val.id === id);\n        let newList = listCopy.map(val => {\n            if(val.id === id) val.isEditing = !val.isEditing\n            return val;\n        });\n        let editedItem = {\n            userInput: editingItem.value,\n            itemId: editingItem.id,\n        }\n        dispatch(setList(newList));\n        dispatch(setEdit(editedItem));\n    }\n    \n    function taskStatus(id){\n        const listCopy = [...list];\n        let statistic, currentItemState, previousItemState, newList = listCopy.map(val => {\n            if(val.id === id) {\n                let preNumber = val.currentStatus.number === 3 ? 0 : val.currentStatus.number + 1;\n                val.currentStatus = {\n                    number: preNumber,\n                    state : status[preNumber]\n                }\n                if(preNumber === 0) preNumber = 4;\n                currentItemState = val.currentStatus.state.split('-').join('')\n                previousItemState = status[preNumber - 1].split('-').join('')\n            }\n            return val;\n        });\n        statistic = {...counter, [currentItemState]: counter[currentItemState] + 1, [previousItemState]: counter[previousItemState] - 1}\n        dispatch(setCounter(statistic))\n        dispatch(setList(newList));\n        dispatch(setWantedListToShow(newList));\n    }\n\n    function itemsLeft (){\n        return wantedListToShow.filter(item => item.currentStatus.state).length;\n    }\n\n    return (\n        <>\n            {\n                Boolean(itemsLeft ()) === false ? (\n                    <p className='lead text-center font-weight-bold'>There is No tasks at this moment</p>\n                )\n                : (\n                    <ul className='list-group'>\n                        <li className='py-2 my-1 d-flex justify-content-between'>\n                            <span className=\"taskHead font-weight-bold my-auto ml-3\">Task</span>\n                            <span className='statusHead font-weight-bold text-center'>Status</span>\n                            <span className='editHead font-weight-bold text-center'>Edit</span>\n                            <span className='removeHead font-weight-bold text-center'>Remove</span>\n                        </li>\n                        {\n                            wantedListToShow.map((val, idx) =>{\n                                return(\n                                    <li key={val.id} className={`leftBorder${val.currentStatus.state} ${val.currentStatus.state === 'canceled' ? 'alert-danger' : ''} ${val.isEditing ? 'highlight' : ''} item py-2 my-1 d-flex justify-content-between`} >\n                                        {\n                                            val.isEditing ?\n                                                <EditForm id={val.id} borderColor={val.currentStatus.state} />\n                                            :   (\n                                                <>\n                                                    <p className=\"task my-auto mx-3\">{idx + 1}- {val.value}</p>\n                                                    <span \n                                                        className={`${val.currentStatus.state} text-white font-weight-bold bg-dark status py-1 text-center`} \n                                                        onClick={() => taskStatus(val.id)} \n                                                    >\n                                                        {val.currentStatus.state}\n                                                    </span>\n                                                    <i className=\"far fa-edit my-auto mx-5 font-weight-bold text-center\" onClick={()=>editItem(val.id)}></i>\n                                                    <i className=\"fas fa-trash my-auto mx-5 font-weight-bold text-center\" onClick={()=>deleteItem(val.id)}></i>\n                                                </>\n                                            )\n                                        }                                        \n                                    </li>\n                                );\n                            })\n                        }\n                    </ul>\n                )\n            }\n        </>\n    )\n}\n\nexport default List;\n","import React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { \n  setList, \n  setWantedListToShow, \n  setCounter\n} from \"../../../actions/actionCreater.js\";\n\nimport './bottomControl.css'\n\nconst BottomControl = () => {\n\n    const { list, wantedListToShow, counter } = useSelector(state => state);\n    const dispatch = useDispatch();\n    \n    function deleteCompletedItem(){\n        let statistic, newList = list.filter(item => item.currentStatus.state !== 'completed');\n        statistic = {...counter, deleted: counter.deleted + (list.length - newList.length), completed: 0 }\n        dispatch(setCounter(statistic))\n        dispatch(setList(newList));\n        dispatch(setWantedListToShow(newList));\n    }\n\n    function clearList(){\n        let statistic = { ...counter,\n            deleted: counter.deleted + list.length,\n            NotStarted: 0,\n            InProgress: 0,\n            canceled: 0,\n            completed: 0,\n        }\n        dispatch(setCounter(statistic))\n        dispatch(setList([]));\n        dispatch(setWantedListToShow([]));\n    }\n\n    function allCompletedItem(){\n        const listCopy = [...list];\n        let statistic, newList = listCopy.map(val => {\n            val.currentStatus = {\n                number: 3,\n                state : 'completed'\n            }\n            return val;\n        });\n        statistic = { ...counter, \n            NotStarted: 0,\n            InProgress: 0,\n            canceled: 0,\n            completed: counter.completed + (list.length - counter.completed),\n        }\n        dispatch(setCounter(statistic))\n        dispatch(setList(newList));\n        dispatch(setWantedListToShow(newList));\n    }\n\n    function cancelAllItem(){\n        let statistic, newList = list.filter(item => item.currentStatus.state = 'canceled');\n        statistic = { ...counter,\n            NotStarted: 0,\n            InProgress: 0,\n            canceled: counter.canceled + (list.length - counter.canceled),\n            completed: 0,\n        }\n        dispatch(setCounter(statistic))\n        dispatch(setList(newList));\n        dispatch(setWantedListToShow(newList));\n    }\n\n    function itemsLeft (){\n        return wantedListToShow.filter(item => item.currentStatus.state).length;\n    }\n\n    return (\n        <>\n            {\n                Boolean(itemsLeft ()) === true && (\n                    <div className='text-right m-3'>\n                        {\n                            wantedListToShow.some(oneItem => oneItem.currentStatus.state === 'completed') && <button className='btn btn-dark m-1' onClick={deleteCompletedItem}>Remove Completed Tasks</button>\n                        }\n                        <button className='btn btn-dark m-1' onClick={allCompletedItem}>Make all Tasks Completed</button>\n                        <button className='btn btn-dark m-1' onClick={cancelAllItem}>Cancel all Tasks</button>\n                        <button className='btn btn-dark m-1' onClick={clearList} >Clear List <i className=\"fas fa-trash all\"></i></button>\n                    </div>\n                )\n            }\n        </>\n    )\n}\n\nexport default BottomControl;\n","import React from 'react';\n// import { useSelector } from \"react-redux\";\n\nimport './tasksBoard.css'\n\nimport TopControl from '../control/topControl';\nimport TaskForm from './../taskForm';\nimport List from '../list';\nimport BottomControl from '../control/bottomControl';\n\nconst TasksBoard = () => {\n    return (\n        <>\n            <h1 className='font-weight-bold text-center my-4'>Tasks Manager</h1>\n            <div className=\"row\">\n                <div className='col-md-3 col-sm-12 pr-0'>\n                    <h3 className='ml-3 font-weight-bold'>Tasks Board</h3>\n                </div>\n                <div className='col-md-9 col-sm-12 p-0'>\n                    <TopControl />\n                </div>\n            </div>\n            <TaskForm />\n            <List />\n            <BottomControl />\n        </>\n    );\n}\n\nexport default TasksBoard;\n","import React from 'react';\nimport TasksStatistics from './components/tasksStatistics';\nimport TasksBoard from './components/tasksBoard';\nimport './app.css';\n\n/*\n** Tasks Manager MVC\n  1. add item\n  2. delete item\n  3. edit item\n  4. clear tasks list\n  5. complete one item\n  6. display tasks list\n  7. delete all completed items\n  8. make all items complete, all at once\n  9. show only completed/In-Progress/canceled/Not-Started/all items\n*/\n\nfunction App(){\n  return (\n    <>\n      <div className='container bg-light mt-3 rounded'>\n        <div className=\"row\">\n          <div className='bg col-md-3 p-3 text-light'>\n            <TasksStatistics />\n          </div>\n          <div className='col-md-9 py-3 px-2'>\n            <TasksBoard />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './index.css';\n\nimport myStore from \"./store/store.js\";\nimport App from './app.js';\n\nfunction Root(){\n  return (\n    <Provider store={myStore}>\n      <App />\n    </Provider>\n  );\n}\n\nrender(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}